{
    "Discord Bot Project" : {
        "date" : "November 2024 - Current",
        "tags" : ["Databases", "Discord Bot"],
        "members": {},
        "desc" : "This project is a Discord chat bot that can store information which will link to a website to view the information in the future.",
        "goals" : {"Use Discord messaging to add to a database": ["Explore Discord as a platform for multiple people to add to/edit a collection of data, and store it in a json database."]},
        "learning" : {"Experience with Discord python library": ["Using functions and objects from the library, I learned how to create message commands and tree commands (slash commands) which is makes the bot functional on Discord."]},
        "status" : "In Progress",
        "res" : {
            "languages" : ["Python"],
            "applications" : ["Discord", "Visual Studio Code"],
            "frameworks/Libraries" : ["discord.py", "python-dotenv", "Flask", "typing", "python-dateutil"]
        },
        "images" : [],
        "link": "https://github.com/jennysu1105/kevin-jenny/tree/v1.0"
    },

    "Web Application Project" : {
        "date" : "January 2023 - April 2023",
        "tags" : ["Web Development", "Databases", "UX/UI"],
        "members" : {"Tiffany Tran" : "https://github.com/TiffanyT-Ryerson", "Kevin Tran" : "https://github.com/kevinguy28", "Michael Widianto": "https://github.com/michaelrw19"},
        "desc" : "A project done in TMU's CPS630 - Web Applications class. We were tasked to making a shopping website using HTML, CSS, React.js, javascript, php and MySQL. With this application, the users should be able to add items to do tasks such as: add to their cart, checkout, place their order, sign in and sign out, etc.",
        "goals" : {"Create a functional shopping website": ["Create functionalities which allows users to order items: signin/signup, add items to their cart, checkout, place order, view orders", "Add additional functionalities such as: reviewing items, creating sale items, etc."], 
        "Create a working database to hold website information": ["Using SQL, store all the information generated via user actions (ex. placing orders, creating payment card, login information, etc) and default admin controlled information (ex. available items, store locations and information).", "Retrieve and send information between the client application and the database servers."], 
        "Make it a Single Page Application": ["A single page application (SPA) is a website that changes pages using a router, which dynamically rewrites the page with new data instead of reloading the entire page. Using React.js, make the web application a SPA."]},
        "learning" : {"Modelling database into a rational model scheme": ["Special classes were created to represent each table into its own entity.", "This simplifies the process of inserting new entities into the database: when adding to the database, we simply need to create an object and use one simple function to insert it."], "Experience using React.js": ["React.js is a single page application language. Working with useStates. useCookies, etc. was very confusing at first, but simple after practicing.", "Additionally, practicing rerouting and calling get request gave me a thorough understanding of how to use them.", "Setting up the application as a whole on MacOS, working with team member's setup was also tricky and took many tries to make it work."], "Working with XAMPP: Apache and MySQL": ["Setting up XAMPP and the MySQL database was new and it was straight forward. I learned how to establish the connection to local servers and use that to interact with the database using php.", "This includes: inserting, modifying and deleting entries and designing the overall architecture to fit the needs of the application in a modular and intuitive way."]},
        "status" : "Complete",
        "res" : {
            "languages" : ["HTML", "CSS", "javascript", "php"],
            "frameworks/Libraries" : ["bootstrap", "jQuery", "axios", "ReactJS"],
            "host" : ["XAMPP", "MySQL"],
            "applications": ["Visual Studio Code"]
        },
        "images" : ["login.png", "login_failed.png", "homepage_admin.png", "homepage_added_items.png", "homepage_user.png", "sale_page.png", "admin_dbmaintain.png", "shopping_cart.png", "checkout.png", "review_order.png", "review_order_map.png", "order_history.png", "rational_model_scheme.png", "database_scheme.png"],
        "link": "https://github.com/jennysu1105/cps630-labs/tree/7a7c4487e93c8e0abe38ea7e2279c0769ae245c1/Project"
    },

    "Data Science Labs" : {
        "date" : "January 2023 - April 2023",
        "tags" : ["Databases", "Data Analysis", "Lab Collection"],
        "members": {},
        "desc" : "A collection of labs done for my Data Science labs using Python Notebooks.",
        "goals" : {"Explore Data Analysis Methods": ["Learn to apply data analysis, statistical and machine learning models to analyze and make predictions on a collection of data.", "Includes: big data, data models, distributed computing, regression and statistical analysis, neural networks, learning models, natural language processing, recommendation systems and social graphs."]},
        "learning" : {},
        "status" : "Complete",
        "res" : {
            "languages" : ["Python"],
            "applications" : ["SQL Developer", "Python Notebook"],
            "frameworks/Libraries" : ["pandas", "numpy", "matplotlib (Graph Visualization)", "scipy (Computing)", "seaborn (data visualization)", "re (Regular Expressions)", "kneed", "wordcount", "nltk (Natural Language Toolkit", "sklearn (Machine Learning)", "networkx (Network Analysis)"],
            "host" : ["Oracle Database"]
        },
        "images" : [],
        "link": "https://github.com/jennysu1105/cps521-labs"
    },

    "ECar App Project" : {
        "date" : "September 2022 - December 2022",
        "tags" : ["UX/UI", "App Development"],
        "members": {"Giancarlo Rosa" : "https://github.com/giancarloclubly", "Finn Huynh": "https://github.com/trachuynh2014"},
        "desc" : "A project done in TMU's CPS613 - Human-Computer Interactions class. For this project, we created an taxi-like app for owners of self-driving cars. For this application, there must be an car owner and ride sharer interface. We were tasked to create an intuitive and easy-to-use app that users of all backgrounds/demographics should be able use without difficulty. Additionally, we needed to conduct usability testing on the app with test subjects.",
        "goals" : {"Create two interfaces": ["The car wner interface should allow users to: view their car status (ex. current location, current charge, odometer), recieve and accept/decline ride requests, view car schedule and create unavailable time slots (where the car cannot be booked), view active ride (if there is one), chat with ride sharers.", "The ride sharer interface should allow users to: view their profile (ex. payment information, recent rides), search and request rides, view active ride (if there is one), chat with ride sharers."], "Have the two interfaces interact with each other" : ["When the ride sharer requests a ride, it should trigger a ride request confirmation where the car owner can accept/deny the request.", "When the ride sharer requests an extra stop for their current ride, the car owner can accept/deny the request.", "When the ride sharer or owner sends a message in the chat, the chats should be synchronized with each other."], "Conduct a usability test" : ["Prepare a test plan and scenarios that will be followed during an usability test with test subjects.", "Conduct the usability test and take notes on any issues/unclear sections of the interface."]},
        "learning" : {"Experience with VB.NET": ["VB.NET or Vidual Basics is an object-oriented programming language using the .NET Framework. It is used for making GUI programs (using Windows Forms) and was used for this project to design a high-fidelity prototype of our app idea.", "Using event handers and attributes, we were able to create two interfaces (one car owner, the other ride sharer) that are synchronized with one another by passing event changes using object-oriented programming."], "Analyzing user requirements": ["Given our app idea, it is necessary for us to identify the various users and stakeholders of the application (ex. car owner, ride sharer) as well as possible backgrounds (ex. gender, IT expirence, skills) and demographics (ex. gender, age, accessibility requirements). Additionally, environmental, organizational and technical requirements.", "With everything taken into account, user goals and tasks were created."], "Conducting usability tests": ["Creating scenarios and test plan is necessary for a successful usability test. We created a pre-usability test plan and practiced asking open-ended questions to the test subjects after the test concludes."]},
        "status" : "Complete",
        "res" : {
            "languages" : ["VB.NET (Visual Basics)"],
            "applications": ["Visual Studio 2022 IDE"]
        },
        "images" : ["my_car.PNG", "schedule.PNG", "unavailable_times.PNG", "add_unavailability.PNG", "edit_unavailability.PNG", "day_rides.PNG", "rider_profile.PNG", "search_for_ride.PNG", "ride_request.PNG", "ride_confirmation_owner.PNG", "ride_detail_rider.PNG", "ride_detail_owner.PNG", "car_controls.PNG", "add_stop_request.PNG", "request_stop_confirmation.PNG", "chat_rider.PNG", "chat_owner.PNG"],
        "link": "https://github.com/jennysu1105/ECar-Prototype"
    },

    "Convention Centre DBMS" : {
        "date" : "September 2021 - December 2021",
        "tags" : ["Databases"],
        "members": {"Stephanie Huynh" : "https://www.linkedin.com/in/stephanie-huynh-a1a5541ab/?originalSubdomain=ca", "Laith Kamal" : "", "Adam Whittington" : ""},
        "desc" : "A project done in TMU's CPS510 - Database Sytems I class. For this project, we were tasked to design a Database Management System (DBMS) for a topic. Our chosen topic was a Convention Centre database which kept track of all attendees, tickets, events, addresses, directories, guest and employees of the database",
        "goals" : {"Design the database" : ["Split all actors and components that goes a convention centre may have and create a table for them.", "Identify attributes of each table.", "Identify any and all relationships that each table may have with each other and connect them with a table.", "Create an Entity-Relationship (ER) diagram that represents the database."], "Create an interface for users" : ["Using queries, create an interface where users can create new entities and relationships for the database."]},
        "learning" : {"Experience planning database structure": ["Using the ER diagram, we were able to map out our ideas and visualize how the proposed database will be implemented into SQL.", "To ensure the database is as simple as it can be, we analyzed the database to ensure they were in the third normal form (to reduce duplication data and simplifies database). For that, we checked the functional dependancies of each table."], "Experience using SQL" : ["To create the database, we learned how to use SQL queries to: create, modify, delete and view tables. That includes going in depth into how to use SELECT queries.", "We immersed ourselves into the ER data model by using foreign keys."]},
        "status" : "Complete",
        "res" : {
            "languages" : ["Java", "Shell Script"],
            "applications" : ["SQL Developer", "Visual Studio Code"],
            "host" : ["Oracle Database"]
        },
        "images" : [],
        "link": "https://github.com/jennysu1105/convention-database"
    },

    "SPLIT" : {
        "date" : "January 2021 - April 2021",
        "tags" : ["Game Development", "UX/UI"],
        "members": {"Yiheng Dai" : "", "Ka Yin Kan" : "", "Yasmeen Saboorizadeh" : "https://www.linkedin.com/in/yasmeensaboorizadeh/"},
        "desc" : "A course project for TMU's CRI510 - Art and Business of Gaming. For this project, we were tasked to design a game and identify the way the process at which we will produce, distribute and market our game idea.",
        "goals" : {"Create a game idea using the 3Cs": ["The Three Cs in game development is: Characters, Camera and Controls. Think of a game concept and define how the 3Cs would be applied to our idea."], "Create a one-page proposal": ["This proposal contains important game details and target demographics"], "Create a monotization strategy" : ["Describe your monotization strategy: promotions, revenue outlets (base game price, DLCs, in-game purchases, merch, partnerships), marketing, cultural impact, demographics, etc. As well as roles of sectors (business/finance, programming, testing, etc) and their roles and goals for the project, and create a budget estimate for production, marketing and distribution of the game."]},
        "learning" : {"Experience creating a game concept and applying 3Cs": ["Our game idea was a hero/villain game where players can choose their path (hero/villain) resulting in different storylines and endings.", "For Character, we identified the characteristics and background story of the protegonist, provided a description for major side characters, organization structures and NPC (each having their own backgrounds and properties.", "For camera, we decided to have a 3rd person point-of-view", "For Controls: we decided to use standard WASD-Space controls with mouse combat controls"], "Planning the UX/UI of a game": ["Mechanics from gameplay to powerups to currencies are important pieces of the user experience and interface of a game. With an open-world RPG, we identified and described all aspects of the gameplay and mechanics.", "To represent the UI of the game, we described the player experience with a screenflow diagram."], "Brief look at the business side of game development": ["Monotization strategies and budgetting are very important for both production and distribution of a game. We took a comprehensive look of how each sector of a game company works together from production to release."]},
        "status" : "Complete",
        "res" : {
            "applications" : ["Procreate", "PowerPoint"]
        },
        "images" : ["logo_credits_yasmeen.PNG", "battle_interface.png", "city_square_sketch.png", "exploration_interface.png", "village_sketch.png", "one_page_proposal.png", "title_screenflow.png", "in_game_screenflow.png"],
        "link": ""
    },

    "VRulez" : {
        "date" : "October 2019 - February 2020",
        "tags" : ["Web Development", "Content Management System", "UX/UI"],
        "members" : {"Shane" : ""},
        "desc" : "VRulez is a Virtual Reality Cafe where customers can use machines to play VR games for a set amount of time. The purpose of this website is to provide information about the games available to play, create bookings, and view any information about the company and experience.",
        "goals" : {"Design pages of the website": ["Organize the information in a visual appealing and inuitive way. I was tasked to design the game list page, home page, news page and locations page"], 
        "Create a game list page" : ["Organize all the games into subcategories and display them."]},
        "learning" : {"Experience using Content Management Systems (CMS)": "First experience creating and designing a website: Using a CMS is a good start to learning how to desgin a website's UX and UI. Changing the appearence of every element in a visual way (via drag/drop) is very straight forward.", 
        "Teamwork in a company setting" : "Working with a more experienced co-op student was very helpful when working on a website for a company. We worked together well and shared our ideas for the layout.", 
        "Experience using Wix Code": "Wix code is the language used to customize Wix Component behaviours. This increases the flexibility and functionality of the components added to the website. Wix Code is very similar to javascript, so it made learning javascript easier."},
        "status" : "Complete",
        "res" : {
            "languages" : ["Wix Code"],
            "cms" : ["Wix"]
        },
        "images" : ["home.png", "gamelist.png", "gamelist_expanded.png", "locations.png", "press.png"],
        "link": ""
    },

    "Tic-Tac-Toe App" : {
        "date" : "January 2018 - June 2018",
        "tags" : ["Game Development, App Development"],
        "members": {},
        "desc" : "An android app made for my final project for ICS4U1 - Grade 12: Introduction to Computer Science at Dr. Norman Bethune CI. I created a Tic-Tac-Toe app using Android Studios which implemented all of the Tic-Tac-Toe rules.",
        "goals" : {"Create app using Android Studios": ["Using gradle as a vitual machine for testing, develop a working app for Android devices using Android Studios."], "Implement the Tic-Tac-Toe rules in the app" : ["Simulate a real Tic-Tac-Toe game using rule checking and user input detection: determine if a move is valid and if a player has won."], "Create multiple navigable menus": ["Create menus where users can choose to turn computer opponent on and off, customize name and choose who goes first."]},
        "learning" : {"Implementing options menu using activities": ["To separate the options menu and the main game, the app swaps the set activity object while saving the states of both when the users swap."], "Working with OOP" : ["Java is a object-oriented programming language. To create the app, each element has event listeners to describe what will happen after the element recieves user input."]},
        "status" : "Complete",
        "res" : {
            "languages" : ["Java"],
            "applications" : ["Android Studio"]
        },
        "images" : [],
        "link": "https://github.com/jennysu1105/tictactoe_app"
    },

    "Elmia" : {
        "date" : "January 2017 - June 2017",
        "tags" : ["Game Development"],
        "members": {},
        "desc" : "A Python game made for my final project for ICS3U1 - Grade 11: Introduction to Computer Science at Dr. Norman Bethune CI. I created a side-scrolling platformer using pygame. Players traverse through map levels using a teleport mechanic to avoid falling and hostile monsters. This is a game inspired by the real Elmia game with the use of sprites from Maplestory.",
        "goals" : {"Experiement with object interactions": ["Using collision detection, create events for when the player makes contact with other sprites.", "Example: Player and hostile mobs --> lose a life, Player and platform --> player lands and walks on platform."], "Create multi-menus": ["Create multiple screens: home screen, game over screen, completion screen, game screen.", "When sreen change is detected, swap these screens by refreshing current game sprites."], "Experience with game design": ["Design game mechanics (lives, energy, monsters, etc) and maps. Additionally, consider menu flow and user interface."], "Working with file data": ["Build maps using a mapdata file: containing numbers representing objects and their coordinates.", "Store high scores in a file which is retrievable and reference them in a high score menu."]},
        "learning" : {"Working with collision detection": ["Elmia checks collision detection by checking if sprites are overlapping with each other. Collision results in different results: lost life when colliding with walls or hostile monsters, energy reset/extra life with energy orbs, level completion with ending wall.", "Collisions are detected using the coordinates of the object locations."], "Metadata in files": ["Map data is stored in a text file where platform coordinates, wall coordinates, hostile mobs, level end locations, energy orbs, etc are kept.", "Highscores for each level are stored and retrieved when entering the highscores menu."], "Object manipulation": ["Elmia uses some OOP to contain all objects with events: energy bar, buttons, lives, player, wolf, etc. Each object has properties indicating important information: position, sprites, actions (move, stop, fall), etc."]},
        "status" : "Complete",
        "res" : {
            "languages" : ["Python 2"],
            "frameworks/Libraries" : ["pygame"],
            "applications": ["Wing IDE", "Paint.NET", "Bannedstory"]
        },
        "images" : ["main_menu.PNG", "tutorial.PNG", "main_game.PNG", "teleport_mechanic.PNG", "energy_orb.PNG", "hostile_monster.PNG", "game_over_complete.PNG", "high_scores.PNG"],
        "link": "https://github.com/jennysu1105/elmia_game"
    }
}